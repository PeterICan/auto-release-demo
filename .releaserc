# 定義將release的分支 (來源：https://semantic-release.gitbook.io/semantic-release/usage/configuration#options)
# release.config.yml 或 .releaserc.yml
branches:
  # 主發布分支 - 發布穩定版本到 @latest
  - name: "main"
    # range: "0.x.x" 通常不設在 main 上，除非你特意想限制主要版本號
    # prerelease: false (或不設定，預設就是 false)
    # channel: "@latest" (或不設定，預設就是 @latest)

  # 預發布開發分支 - 發布預覽版本到特定的通道 (例如 npm 的 @next, @beta 或 @dev)
  - name: "dev" # 常用作主要開發線
    channel: "dev" # 可選，指定通道名稱，否則默認是分支名作為通道名
    prerelease: true # 自動生成如 0.1.0-dev.1, 0.1.0-dev.2

  - name: "milestones" # milestone 分支 - 驗收版本
    prerelease: false # 不自動生成預發布版本
  
  - name: "release/*" # 針對大版本的beta分支
    prerelease: "beta" # 例如 beta 分支會生成 X.0.0-beta.1, X.0.0-beta.2 等版本

  # 維護分支 - 為舊主要版本提供更新，發布到特定通道
  # - name: "1.x.x"
  #   range: "1.x.x"
  #   channel: "1.x" # 例如 npm install my-package@1.x

  # 其他預發布分支，如果需要
  # - name: "alpha"
  #   prerelease: "alpha"
  #   channel: "alpha"

  # milestone 分支 - 用於特定版本的發布
  # - name: "milestone"
  #   range: "0.x.x"


plugins:
  - - "@semantic-release/commit-analyzer"
    - preset: "angular" # 保留 commit-analyzer 的 preset
      releaseRules:
      - type: "patch"
        release: "patch"
      - type: "major"
        release: "major"
      - type: "art"
        release: false
  - - "@semantic-release/release-notes-generator"
    - preset: "conventionalcommits"
      presetConfig:
    # 這是因為需要完全控制 transform 函數，避免 preset 的內部 transform 覆蓋我們的邏輯。
    # 如果移除 preset，將需要手動定義所有 commitTypes 和 releaseRules 對應的 section。
    # 更好的方式是保留 preset，並覆蓋其 transform。
        types:
          # --- 核心功能類型 ---
          - type: "major" # 將 'major' type 映射到「🚀 重大更新」
            section: "✨ 新功能"
            hidden: false
          - type: "feat" # 將 'feat' type 映射到「✨ 新功能」
            section: "✨ 新功能"
            hidden: false
          - type: "patch" # 將 'patch' type 映射到「💡 微幅功能/修正」
            section: "💡 微幅功能"
            hidden: false

          # --- 修復類型 ---
          - type: "fix"
            section: "🐛 Bug 修復"
            hidden: false

          # --- 其他自定義類型 ---
          - type: "art" # 將 'art' type 映射到「🎨 美術與視覺資源更新」
            section: "🎨 美術與視覺資源更新"
            hidden: false

          # --- 其他標準類型 (必須全部明確列出，否則會被隱藏) ---
          - type: "perf"
            section: "⚡ 性能優化"
            hidden: false
          - type: "refactor"
            section: "🧹 程式碼重構"
            hidden: false
          - type: "docs"
            section: "📝 文件更新"
            hidden: false
          - type: "chore"
            section: "🔧 其他雜項"
            hidden: false
          - type: "revert"
            section: "⏪ 版本回溯"
            hidden: false

          # 您可以選擇在這裡將不希望顯示的類型明確設定 hidden: true
          - type: "style"
            hidden: true
          - type: "test"
            hidden: true
          - type: "build"
            hidden: true
          - type: "ci"
            hidden: true
            
  - "@semantic-release/github" # 這個是插件名稱
  - - assets: # 這是插件的選項，它是一個物件
        - path: "test.txt"
          label: "測試文本"